#ifndef __GL5202_BOOT_ATC260X_DRIVER__H__
#define __GL5202_BOOT_ATC260X_DRIVER__H__

///* register bits in PMU_SYS_CTL2 */
#define ONOFF_RESET_TIME_SEL(x)         (((x) & 0x3) << 7)
#define ONOFF_RESET_EN                  (1 << 9)
#define ONOFF_PRESS_TIME(x)             (((x) & 0x3) << 10)
#define ONOFF_INT_EN                    (1 << 12)
#define ONOFF_LONG_PRESS                (1 << 13)
#define ONOFF_SHORT_PRESS               (1 << 14)
#define ONOFF_PRESS                     (1 << 15)

/* atc2603_PMU_CHARGER_CTL0 */
#define PMU_CHARGER_CTL0_CHGAUTO_DETECT_EN      (1 << 0)
#define PMU_CHARGER_CTL0_CHGPWR_SET_SHIFT       (1)
#define PMU_CHARGER_CTL0_CHGPWR_SET_MASK        (0x3 << PMU_CHARGER_CTL0_CHGPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHGPWR_SET_100MV       (0 << PMU_CHARGER_CTL0_CHGPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHGPWR_SET_200MV       (1 << PMU_CHARGER_CTL0_CHGPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHGPWR_SET_300MV       (2 << PMU_CHARGER_CTL0_CHGPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHGPWR_SET_400MV       (3 << PMU_CHARGER_CTL0_CHGPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHG_CURRENT_TEMP       (1 << 3)
#define PMU_CHARGER_CTL0_CHG_SYSPWR_SET_SHIFT   (4)
#define PMU_CHARGER_CTL0_CHG_SYSPWR_SET         (0x3 << PMU_CHARGER_CTL0_CHG_SYSPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHG_SYSPWR_SET_3810MV      (0 << PMU_CHARGER_CTL0_CHG_SYSPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHG_SYSPWR_SET_3960MV      (1 << PMU_CHARGER_CTL0_CHG_SYSPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHG_SYSPWR_SET_4250MV      (2 << PMU_CHARGER_CTL0_CHG_SYSPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHG_SYSPWR_SET_4400MV      (3 << PMU_CHARGER_CTL0_CHG_SYSPWR_SET_SHIFT)
#define PMU_CHARGER_CTL0_CHG_SYSPWR             (1 << 6)
#define PMU_CHARGER_CTL0_DTSEL_SHIFT            (7)
#define PMU_CHARGER_CTL0_DTSEL_MASK             (0x1 << PMU_CHARGER_CTL0_DTSEL_SHIFT)
#define PMU_CHARGER_CTL0_DTSEL_12MIN            (0 << PMU_CHARGER_CTL0_DTSEL_SHIFT)
#define PMU_CHARGER_CTL0_DTSEL_20S              (1 << PMU_CHARGER_CTL0_DTSEL_SHIFT)
#define PMU_CHARGER_CTL0_CHG_FORCE_OFF          (1 << 8)
#define PMU_CHARGER_CTL0_TRICKLEEN              (1 << 9)
#define PMU_CHARGER_CTL0_CHARGE_TIMER2_SHIFT    (10)
#define PMU_CHARGER_CTL0_CHARGE_TIMER2_MASK     (0x3 << PMU_CHARGER_CTL0_CHARGE_TIMER2_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER2_30MIN    (0 << PMU_CHARGER_CTL0_CHARGE_TIMER2_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER2_40MIN    (1 << PMU_CHARGER_CTL0_CHARGE_TIMER2_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER2_50MIN    (2 << PMU_CHARGER_CTL0_CHARGE_TIMER2_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER2_60MIN    (3 << PMU_CHARGER_CTL0_CHARGE_TIMER2_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER1_SHIFT    (12)
#define PMU_CHARGER_CTL0_CHARGE_TIMER1_MASK     (0x3 << PMU_CHARGER_CTL0_CHARGE_TIMER1_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER1_4H       (0 << PMU_CHARGER_CTL0_CHARGE_TIMER1_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER1_6H       (1 << PMU_CHARGER_CTL0_CHARGE_TIMER1_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER1_8H       (2 << PMU_CHARGER_CTL0_CHARGE_TIMER1_SHIFT)
#define PMU_CHARGER_CTL0_CHARGE_TIMER1_12H      (3 << PMU_CHARGER_CTL0_CHARGE_TIMER1_SHIFT)
#define PMU_CHARGER_CTL0_CHGTIME                (1 << 14)
#define PMU_CHARGER_CTL0_ENCH                   (1 << 15)

/* atc2603_PMU_CHARGER_CTL1 */
#define PMU_CHARGER_CTL1_ICHG_REG_CC_SHIFT      (0)
#define PMU_CHARGER_CTL1_ICHG_REG_CC_MASK       (0xf << PMU_CHARGER_CTL1_ICHG_REG_CC_SHIFT)
#define PMU_CHARGER_CTL1_ICHG_REG_CC(i)         \
            ((((i) / 100) << PMU_CHARGER_CTL1_ICHG_REG_CC_SHIFT) & PMU_CHARGER_CTL1_ICHG_REG_CC_MASK)

#define PMU_CHARGER_CTL1_BAT_EXIST_EN           (1 << 5)
#define PMU_CHARGER_CTL1_CURRENT_SOFT_START     (1 << 6)
#define PMU_CHARGER_CTL1_STOPV_SHIFT            (7)
#define PMU_CHARGER_CTL1_STOPV_MASK             (0x1 << PMU_CHARGER_CTL1_STOPV_SHIFT)
#define PMU_CHARGER_CTL1_STOPV_4180MV           (1 << PMU_CHARGER_CTL1_STOPV_SHIFT)
#define PMU_CHARGER_CTL1_STOPV_4160MV           (0 << PMU_CHARGER_CTL1_STOPV_SHIFT)
#define PMU_CHARGER_CTL1_CHARGER_TIMER_END      (1 << 8)
#define PMU_CHARGER_CTL1_BAT_DT_OVER            (1 << 9)
#define PMU_CHARGER_CTL1_BAT_EXIST              (1 << 10)
#define PMU_CHARGER_CTL1_CUR_ZERO               (1 << 11)
#define PMU_CHARGER_CTL1_CHGPWROK               (1 << 12)
#define PMU_CHARGER_CTL1_PHASE_SHIFT            (13)
#define PMU_CHARGER_CTL1_PHASE_MASK             (0x3 << PMU_CHARGER_CTL1_PHASE_SHIFT)
#define PMU_CHARGER_CTL1_PHASE_PRECHARGE        (1 << PMU_CHARGER_CTL1_PHASE_SHIFT)
#define PMU_CHARGER_CTL1_PHASE_CONSTANT_CURRENT (2 << PMU_CHARGER_CTL1_PHASE_SHIFT)
#define PMU_CHARGER_CTL1_PHASE_CONSTANT_VOLTAGE (3 << PMU_CHARGER_CTL1_PHASE_SHIFT)
#define PMU_CHARGER_CTL1_CHGEND                 (1 << 15)

/* atc2603_PMU_CHARGER_CTL2 */
#define PMU_CHARGER_CTL2_ICHG_REG_T_SHIFT       (0)
#define PMU_CHARGER_CTL2_ICHG_REG_T_MASK        (0x3 << PMU_CHARGER_CTL2_ICHG_REG_T_SHIFT)
#define PMU_CHARGER_CTL1_ICHG_REG_T(i)          \
            ((((i) / 100) << PMU_CHARGER_CTL2_ICHG_REG_T_SHIFT) & PMU_CHARGER_CTL2_ICHG_REG_T_MASK)

#define PMU_CHARGER_CTL2_CV_SET                 (1 << 6)

/* atc2603_PMU_SYS_Pending */
#define PMU_SYS_PENDING_BAT_OV                  (1 << 15)

/* atc2603_PMU_OT_CTL */
#define PMU_OT_CTL_OT                           (1 << 15)



#define PMU_SYS_CTL3_EN_S3              (1 << 14)
#define PMU_SYS_CTL3_EN_S2              (1 << 15)
#define PMU_SYS_CTL1_EN_S1              (1 << 0)

#define ATC260X_SUPPLY_WALL         (0)
#define ATC260X_SUPPLY_VBUS         (1)
#define ATC260X_SUPPLY_BAT          (2)

enum atc260x_auxadc {
    ATC260X_AUX_IREF     = 0,
    ATC260X_AUX_CHGI     = 1,
    ATC260X_AUX_VBUSI    = 2,
    ATC260X_AUX_WALLI    = 3,
    ATC260X_AUX_BATI     = 4,
    ATC260X_AUX_REMCON   = 5,
    ATC260X_AUX_TEMP     = 6,
    ATC260X_AUX_BATV     = 7,
    ATC260X_AUX_BAKBATV  = 8,
    ATC260X_AUX_SYSPWRV  = 9,
    ATC260X_AUX_WALLV    = 10,
    ATC260X_AUX_VBUSV    = 11,
    ATC260X_AUX_AUX3     = 12,
    ATC260X_AUX_AUX2     = 13,
    ATC260X_AUX_AUX1     = 14,
    ATC260X_AUX_AUX0     = 15,
};

#define ATC260X_WALL_VOLTAGE_THRESHOLD      4200        /* 4.2v */
#define ATC260X_VBUS_VOLTAGE_THRESHOLD      4200        /* 4.2v */

#define ATC260X_BAT_DETECT_DELAY_MS         300         /* wait 300ms for bat detect over */


int atc260x_reg_write(unsigned short reg , unsigned short value);
int atc260x_reg_read(unsigned short reg);
int atc260x_set_bits( unsigned short reg, unsigned short mask, unsigned short val);
int atc2603_init(int opt);
#endif
